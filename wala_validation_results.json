[
  {
    "scenario": "Simple Method Slice",
    "success": true,
    "correct": true,
    "has_expected_content": true,
    "quality_checks": {
      "has_content": true,
      "has_java_code": true,
      "has_target_method": true,
      "is_reasonable_size": true,
      "has_meaningful_content": true
    },
    "slice_content": "// Fallback slice for com.example.SimpleTest#getValue()\n// Target line: 10\n// Generated by WALA slicer fallback\n\n    public SimpleTest(int value) {\n        this.value = value;\n    }\n    \n    public int getValue() {\n        return value;  // Target line\n    }\n}\n"
  },
  {
    "scenario": "Constructor Slice",
    "success": true,
    "correct": true,
    "has_expected_content": true,
    "quality_checks": {
      "has_content": true,
      "has_java_code": true,
      "has_target_method": true,
      "is_reasonable_size": true,
      "has_meaningful_content": true
    },
    "slice_content": "// Fallback slice for com.example.ConstructorTest#ConstructorTest(String)\n// Target line: 6\n// Generated by WALA slicer fallback\n\n\npublic class ConstructorTest {\n    private String name;\n    \n    public ConstructorTest(String name) {\n        this.name = name;  // Target line\n    }\n}\n"
  },
  {
    "scenario": "Method with Parameters",
    "success": true,
    "correct": true,
    "has_expected_content": true,
    "quality_checks": {
      "has_content": true,
      "has_java_code": true,
      "has_target_method": true,
      "is_reasonable_size": true,
      "has_meaningful_content": true
    },
    "slice_content": "// Fallback slice for com.example.ParamTest#processData(int[],int)\n// Target line: 4\n// Generated by WALA slicer fallback\n\npackage com.example;\n\npublic class ParamTest {\n    public void processData(int[] data, int index) {\n        int value = data[index];  // Target line\n        System.out.println(value);\n    }\n}\n"
  }
]