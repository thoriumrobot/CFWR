{
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null
    },
    {
      "id": 2,
      "label": "If(MethodInvocation(arguments=[MemberReference(member=buffer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=supportsAtomicOperations, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[], type_arguments=None))",
      "line": 277
    },
    {
      "id": 3,
      "label": "Return(None)",
      "line": 279
    },
    {
      "id": 4,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_LONG, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=getLongVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 282
    },
    {
      "id": 5,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_LONG, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[])], member=putLongVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 283
    },
    {
      "id": 6,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_LONG, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[]), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[])], member=compareAndSetLong, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 284
    },
    {
      "id": 7,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_LONG, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[])], member=getAndAddLong, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 285
    },
    {
      "id": 8,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_LONG, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[])], member=getAndSetLong, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 286
    },
    {
      "id": 9,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_LONG, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[])], member=putLongRelease, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 287
    },
    {
      "id": 10,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_LONG, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Long, selectors=[])], member=addLongRelease, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 288
    },
    {
      "id": 11,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_INT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=getIntVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 290
    },
    {
      "id": 12,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_INT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[])], member=putIntVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 291
    },
    {
      "id": 13,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_INT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[]), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[])], member=compareAndSetInt, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 292
    },
    {
      "id": 14,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_INT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[])], member=getAndAddInt, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 293
    },
    {
      "id": 15,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_INT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[])], member=getAndSetInt, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 294
    },
    {
      "id": 16,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_INT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[])], member=putIntRelease, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 295
    },
    {
      "id": 17,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_INT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[])], member=addIntRelease, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 296
    },
    {
      "id": 18,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_SHORT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=getShortVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 298
    },
    {
      "id": 19,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_SHORT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Short, selectors=[])], member=putShortVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 299
    },
    {
      "id": 20,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_CHAR, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=getCharVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 301
    },
    {
      "id": 21,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_CHAR, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Character, selectors=[])], member=putCharVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 302
    },
    {
      "id": 22,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_BYTE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=getByteVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 304
    },
    {
      "id": 23,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=MemberReference(member=offset, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=SIZE_OF_BYTE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), MemberReference(member=MAX_VALUE, postfix_operators=[], prefix_operators=[], qualifier=Byte, selectors=[])], member=putByteVolatile, postfix_operators=[], prefix_operators=[], qualifier=buffer, selectors=[], type_arguments=None)",
      "line": 305
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 4
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 17,
      "target": 18
    },
    {
      "source": 18,
      "target": 19
    },
    {
      "source": 19,
      "target": 20
    },
    {
      "source": 20,
      "target": 21
    },
    {
      "source": 21,
      "target": 22
    },
    {
      "source": 22,
      "target": 23
    },
    {
      "source": 23,
      "target": 1
    }
  ]
}