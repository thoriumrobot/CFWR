{
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null
    },
    {
      "id": 2,
      "label": "Try",
      "line": 35
    },
    {
      "id": 3,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i77, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=9), operator=<))",
      "line": 36
    },
    {
      "id": 4,
      "label": "If(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operator=||))",
      "line": 37
    },
    {
      "id": 5,
      "label": "If(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operator=&&))",
      "line": 38
    },
    {
      "id": 6,
      "label": "Return(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=15.49f), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=|), operator=&))",
      "line": 39
    },
    {
      "id": 7,
      "label": "Update(MemberReference(member=__cfwr_i77, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 36
    },
    {
      "id": 8,
      "label": "Catch(__cfwr_e99)",
      "line": null
    },
    {
      "id": 9,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=__cfwr_node96)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Double, sub_type=None))",
      "line": 46
    },
    {
      "id": 10,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i59, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=<))",
      "line": 47
    },
    {
      "id": 11,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i75, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=<))",
      "line": 48
    },
    {
      "id": 12,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=8.31))",
      "line": 49
    },
    {
      "id": 13,
      "label": "Update(MemberReference(member=__cfwr_i75, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 48
    },
    {
      "id": 14,
      "label": "Update(MemberReference(member=__cfwr_i59, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 47
    },
    {
      "id": 15,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false))",
      "line": 52
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 8
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 9
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 7
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 5,
      "target": 7
    },
    {
      "source": 7,
      "target": 3
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 15
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 14
    },
    {
      "source": 13,
      "target": 11
    },
    {
      "source": 14,
      "target": 10
    }
  ]
}