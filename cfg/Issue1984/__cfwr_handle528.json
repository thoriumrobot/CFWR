{
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null
    },
    {
      "id": 2,
      "label": "If(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator=||))",
      "line": 41
    },
    {
      "id": 3,
      "label": "Try",
      "line": 42
    },
    {
      "id": 4,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=254L))",
      "line": 43
    },
    {
      "id": 5,
      "label": "Catch(__cfwr_e60)",
      "line": null
    },
    {
      "id": 6,
      "label": "If(BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=%), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator=&&))",
      "line": 48
    },
    {
      "id": 7,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i37, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=<))",
      "line": 49
    },
    {
      "id": 8,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i88, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=10), operator=<))",
      "line": 50
    },
    {
      "id": 9,
      "label": "If(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=/), operator=&&))",
      "line": 51
    },
    {
      "id": 10,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=2.83), operator=%), name=__cfwr_item35)], modifiers=set(), type=BasicType(dimensions=[], name=byte))",
      "line": 52
    },
    {
      "id": 11,
      "label": "Update(MemberReference(member=__cfwr_i88, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 50
    },
    {
      "id": 12,
      "label": "Update(MemberReference(member=__cfwr_i37, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 49
    },
    {
      "id": 13,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=775L), name=__cfwr_data41)], modifiers=set(), type=BasicType(dimensions=[], name=long))",
      "line": 57
    },
    {
      "id": 14,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=__cfwr_temp86)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Float, sub_type=None))",
      "line": 58
    },
    {
      "id": 15,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"test31\"))",
      "line": 59
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 6
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 5
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 6,
      "target": 13
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 7,
      "target": 13
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 8,
      "target": 12
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 11
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 11,
      "target": 8
    },
    {
      "source": 12,
      "target": 7
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 14,
      "target": 15
    }
  ]
}