{
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null
    },
    {
      "id": 2,
      "label": "While(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false))",
      "line": 107
    },
    {
      "id": 3,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i76, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=<))",
      "line": 92
    },
    {
      "id": 4,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i60, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5), operator=<))",
      "line": 93
    },
    {
      "id": 5,
      "label": "If(BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=6.87), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=%), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator=||))",
      "line": 94
    },
    {
      "id": 6,
      "label": "While(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))",
      "line": 113
    },
    {
      "id": 7,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=__cfwr_temp52)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Integer, sub_type=None))",
      "line": 96
    },
    {
      "id": 8,
      "label": "Break",
      "line": 118
    },
    {
      "id": 9,
      "label": "Update(MemberReference(member=__cfwr_i60, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 93
    },
    {
      "id": 10,
      "label": "Update(MemberReference(member=__cfwr_i76, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 92
    },
    {
      "id": 11,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=__cfwr_val77)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Float, sub_type=None))",
      "line": 104
    },
    {
      "id": 12,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i86, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=<))",
      "line": 105
    },
    {
      "id": 13,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i57, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=9), operator=<))",
      "line": 106
    },
    {
      "id": 14,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=84.19f), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=694), operator=^), operator=>>), name=__cfwr_elem70)], modifiers=set(), type=BasicType(dimensions=[], name=double))",
      "line": 108
    },
    {
      "id": 15,
      "label": "Update(MemberReference(member=__cfwr_i57, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 106
    },
    {
      "id": 16,
      "label": "Update(MemberReference(member=__cfwr_i86, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 105
    },
    {
      "id": 17,
      "label": "While(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operator=-))",
      "line": 114
    },
    {
      "id": 18,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=__cfwr_result48)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Character, sub_type=None))",
      "line": 115
    },
    {
      "id": 19,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16.41))",
      "line": 120
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 11
    },
    {
      "source": 2,
      "target": 14
    },
    {
      "source": 2,
      "target": 15
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 8
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 10
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 5,
      "target": 9
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 6,
      "target": 9
    },
    {
      "source": 6,
      "target": 17
    },
    {
      "source": 6,
      "target": 19
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 9,
      "target": 4
    },
    {
      "source": 10,
      "target": 3
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 12,
      "target": 6
    },
    {
      "source": 13,
      "target": 2
    },
    {
      "source": 13,
      "target": 16
    },
    {
      "source": 14,
      "target": 8
    },
    {
      "source": 15,
      "target": 13
    },
    {
      "source": 16,
      "target": 12
    },
    {
      "source": 17,
      "target": 18
    },
    {
      "source": 17,
      "target": 8
    },
    {
      "source": 18,
      "target": 8
    }
  ]
}