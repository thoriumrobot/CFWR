{
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null
    },
    {
      "id": 2,
      "label": "If(BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='Z'), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=91.54f), operator=|), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=-), operator=+), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='f'), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=80L), operator=/), operator=||))",
      "line": 26
    },
    {
      "id": 3,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i86, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=<))",
      "line": 27
    },
    {
      "id": 4,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i53, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6), operator=<))",
      "line": 28
    },
    {
      "id": 5,
      "label": "Return(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='O'), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0.14), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=79.81), operator=/), operator=&))",
      "line": 29
    },
    {
      "id": 6,
      "label": "Update(MemberReference(member=__cfwr_i53, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 28
    },
    {
      "id": 7,
      "label": "Update(MemberReference(member=__cfwr_i86, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 27
    },
    {
      "id": 8,
      "label": "While(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))",
      "line": 48
    },
    {
      "id": 9,
      "label": "If(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=884L), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=639), operator=/), operator=||))",
      "line": 34
    },
    {
      "id": 10,
      "label": "Try",
      "line": 36
    },
    {
      "id": 11,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=__cfwr_val5)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Character, sub_type=None))",
      "line": 37
    },
    {
      "id": 12,
      "label": "Catch(__cfwr_e17)",
      "line": null
    },
    {
      "id": 13,
      "label": "Catch(__cfwr_e78)",
      "line": null
    },
    {
      "id": 14,
      "label": "Break",
      "line": 52
    },
    {
      "id": 15,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"value75\"), name=__cfwr_temp59)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))",
      "line": 47
    },
    {
      "id": 16,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i17, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=<))",
      "line": 49
    },
    {
      "id": 17,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='g'), name=__cfwr_temp79)], modifiers=set(), type=BasicType(dimensions=[], name=char))",
      "line": 50
    },
    {
      "id": 18,
      "label": "Update(MemberReference(member=__cfwr_i17, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 49
    },
    {
      "id": 19,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null))",
      "line": 54
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 8
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 8
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 7
    },
    {
      "source": 6,
      "target": 4
    },
    {
      "source": 7,
      "target": 3
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 8,
      "target": 15
    },
    {
      "source": 8,
      "target": 16
    },
    {
      "source": 8,
      "target": 19
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 14
    },
    {
      "source": 10,
      "target": 10
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 12
    },
    {
      "source": 10,
      "target": 13
    },
    {
      "source": 11,
      "target": 14
    },
    {
      "source": 12,
      "target": 14
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 15,
      "target": 8
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 14
    },
    {
      "source": 17,
      "target": 18
    },
    {
      "source": 18,
      "target": 16
    }
  ]
}