{
  "method_name": "array_size_positive_16",
  "pattern_name": "array_size_positive",
  "complexity": "easy",
  "target_variables": {
    "size": "@Positive"
  },
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "type": "control",
      "line_number": 1
    },
    {
      "id": 1,
      "label": "public int[] createArray(int size)",
      "type": "statement",
      "line_number": 2,
      "target_annotation": "@Positive",
      "is_target": true,
      "has_numeric_type": true,
      "has_array_access": true,
      "has_length_call": false,
      "has_comparison": false,
      "has_arithmetic": false,
      "has_method_call": true,
      "has_loop_context": false,
      "has_search_pattern": false,
      "is_parameter": false,
      "is_variable": true
    },
    {
      "id": 2,
      "label": "return new int[size];  // size needs @Positive (> 0)",
      "type": "statement",
      "line_number": 3,
      "target_annotation": "@Positive",
      "is_target": true,
      "has_numeric_type": false,
      "has_array_access": true,
      "has_length_call": false,
      "has_comparison": true,
      "has_arithmetic": true,
      "has_method_call": true,
      "has_loop_context": false,
      "has_search_pattern": false,
      "is_parameter": true,
      "is_variable": false
    },
    {
      "id": 3,
      "label": "Exit",
      "type": "control",
      "line_number": 4
    }
  ],
  "java_code": "\npublic int[] createArray(int size) {\n    return new int[size];  // size needs @Positive (> 0)\n}"
}