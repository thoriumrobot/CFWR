{
  "method_name": "testMethod",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=__cfwr_item53)], modifiers=set(), type=BasicType(dimensions=[], name=short))",
      "line": 6,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5), name=x)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 8,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MemberReference(member=x, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+), name=y)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 9,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "If(BinaryOperation(operandl=MemberReference(member=y, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=>))",
      "line": 10,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MemberReference(member=y, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=*), name=z)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 11,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "MethodInvocation(arguments=[MemberReference(member=z, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=println, postfix_operators=[], prefix_operators=[], qualifier=System.out, selectors=[], type_arguments=None)",
      "line": 12,
      "node_type": "control"
    },
    {
      "id": 8,
      "label": "Return(MemberReference(member=y, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 14,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 4,
      "variable": "x"
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 5,
      "variable": "y"
    },
    {
      "source": 4,
      "target": 6,
      "variable": "y"
    },
    {
      "source": 4,
      "target": 8,
      "variable": "y"
    },
    {
      "source": 4,
      "target": 8,
      "variable": "y"
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 5,
      "target": 8
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 6,
      "target": 7,
      "variable": "z"
    },
    {
      "source": 7,
      "target": 8
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 5,
      "target": 8
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 8
    }
  ],
  "dataflow_edges": [
    {
      "source": 3,
      "target": 4,
      "variable": "x"
    },
    {
      "source": 4,
      "target": 5,
      "variable": "y"
    },
    {
      "source": 4,
      "target": 6,
      "variable": "y"
    },
    {
      "source": 4,
      "target": 8,
      "variable": "y"
    },
    {
      "source": 4,
      "target": 8,
      "variable": "y"
    },
    {
      "source": 6,
      "target": 7,
      "variable": "z"
    }
  ]
}